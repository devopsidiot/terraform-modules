name: Validate Module

on:  
  pull_request:
    branches:
      - integration
    types:
      - opened
      - reopened
      - synchronize
      - unlocked
    paths-ignore:
      - ".github/**"
      - ".githooks/**"
      - "**.md"  
      
jobs:  
  validation:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.RELEASE_WORKFLOW_TOKEN }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.0.0

      - name: Setup SSH Keys and known_hosts
        #  Copied from https://github.com/maddox/actions/blob/master/ssh/entrypoint.sh
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"
          echo "${{secrets.ID_RSA}}" > "$SSH_PATH/id_rsa"
          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
          
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config "key=PR-${{ github.event.pull_request.number }}"
            
      - name: Terraform Validate
        id: validate
        run: |
          unset t_std t_err
  
          eval "$( terraform validate -no-color \
                  2> >(t_err=$(cat); typeset -p t_err) \
                   > >(t_std=$(cat); typeset -p t_std) )"
  
          t_err="${t_err//'%'/'%25'}"
          t_err="${t_err//$'\n'/'%0A'}"
          t_err="${t_err//$'\r'/'%0D'}"
  
          echo "::set-output name=stderr::$t_err"
  
          t_std="${t_std//'%'/'%25'}"
          t_std="${t_std//$'\n'/'%0A'}"
          t_std="${t_std//$'\r'/'%0D'}"
  
          echo "::set-output name=stdout::$t_std"
  
      - name: Comment PR with Terraform status
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.RELEASE_WORKFLOW_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖 \`${{ steps.validate.outcome }}\`
            
            <details><summary>Show Validation</summary>
            
            \`\`\`${{ steps.validate.outputs.stderr }}${{ steps.validate.outputs.stdout }}
            \`\`\`
            
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
      
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  
